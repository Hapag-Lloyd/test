---
name: Docker

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      image-name:
        type: string
        required: true
      push:
        type: boolean
        required: false
        default: false
#  push:
#    branches:
#      - "main"
#    tags:
#      - "v*.*.*"
#  pull_request:
#    branches:
#      - "main"

env:
  ORG_NAME: hlag
  REGISTRY: ghcr.io

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Tags
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ inputs.image-name }}
          tags: |
            type=ref,event=pr
            type=edge,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ inputs.image-name }}:temp
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ inputs.image-name }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ inputs.image-name }}:buildcache,mode=max
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.18.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ inputs.image-name }}:temp
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ inputs.image-name }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ inputs.image-name }}:buildcache,mode=max
