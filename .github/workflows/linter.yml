name: Lint files

on:
  pull_request:

jobs:
  find-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          list-files: 'json'
          filters: |
            json:
              - '**/*.json'

            markdown:
              - '**/*.md'

            renovate-config:
              - 'renovate.json'
              - 'default.json'

            workflow:
              - '.github/workflow/*'
            
            dockerfile:
              - '**/*Dockerfile*'
    outputs:
      json: ${{ steps.changes.outputs.json }}
      json_files: ${{ steps.changes.outputs.json_files }}
      markdown: ${{ steps.changes.outputs.markdown }}
      renovate-config: ${{ steps.changes.outputs.renovate-config }}
      workflow: ${{ steps.changes.outputs.workflow }}
      dockerfile: ${{ steps.changes.outputs.dockerfile }}

  lint-renovate:
    runs-on: ubuntu-latest
    if: needs.find-changes.outputs.renovate-config == 'true'
    needs: find-changes
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - uses: suzuki-shunsuke/github-action-renovate-config-validator@36a15b83e37bf3221dc9c02ff5ffdaefb51ca1cf # v1.1.0

      # validates the default configuration included by all projects
      - uses: suzuki-shunsuke/github-action-renovate-config-validator@36a15b83e37bf3221dc9c02ff5ffdaefb51ca1cf # v1.1.0
        with:
          config_file_path: default.json

  lint-markdown:
    runs-on: ubuntu-latest
    if: needs.find-changes.outputs.markdown == 'true'
    needs: find-changes
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Validate Markdown file
        run: |
          npm install -g markdownlint-cli
          markdownlint -c .config/markdownlint.yml -i CHANGELOG.md "**/*.md"

  lint-json:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: needs.find-changes.outputs.json == 'true'
    needs: find-changes
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run JSON Lint
        env:
          INCLUDE_FILES: ${{ needs.find-changes-for-shell-output.outputs.json_files }}
        run: |
          echo $INCLUDE_FILES
          bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/json-lint/master/pipeline.sh)

  lint-workflow:
    runs-on: ubuntu-latest
    if: needs.find-changes.outputs.workflow == 'true'
    container:
      image: rhysd/actionlint:1.7.1
      options: --cpus 1 --user root
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Validate Github workflows
        run: |
          mkdir .git
          actionlint -color

  lint-docker:
    runs-on: ubuntu-lastest
    continue-on-error: true
    needs: find-changes
    if: needs.find-changes.outputs.dockerfile == 'true'
    strategy:
      matrix:
        file: ${{fromJSON(needs.find-changes.outputs.dockerfile_files)}}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: ${{ matrix.file }}
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `
            #### Hadolint for \`${{ matrix.file }}\`: \`${{ steps.hadolint.outcome }}\`
            \`\`\`
            ${process.env.HADOLINT_RESULTS}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
